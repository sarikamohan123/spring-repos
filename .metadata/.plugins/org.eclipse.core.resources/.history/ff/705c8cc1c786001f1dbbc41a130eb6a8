package com.prs.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.server.ResponseStatusException;

import com.prs.db.LineItemRepo;
import com.prs.model.LineItem;

@RestController
@RequestMapping("/api/LineItems")
public class LineItemController  {
	@Autowired
	private LineItemRepo lineItemRepo;
	
	// Get all LineItems
		@GetMapping("/")
		public List<LineItem> getAllLineItem() {
			return lineItemRepo.findAll();
		}

		// GetById 
		@GetMapping("/{id}")
		public Optional<LineItem> getLineItemById(@PathVariable int id) {
			
		Optional<LineItem> l = lineItemRepo.findById(id);
			if (l.isPresent())
				return l;
			else
				throw new ResponseStatusException(HttpStatus.NOT_FOUND, "Lineitem not found for id: " + id);

		}
		
		@PostMapping("")
		public LineItem addLineItem(@RequestBody LineItem lineItem) {
			return lineItemRepo.save(lineItem);
		}
		
		
		// put -
		@PutMapping("/{id}")
		@ResponseStatus(HttpStatus.NO_CONTENT)
		public void putLineItem(@PathVariable int id, @RequestBody LineItem lineItem) {
			
			if (id != lineItem.getId()) {
				throw new ResponseStatusException(HttpStatus.BAD_REQUEST, "LineItem id mismatch vs url");
			}
			// If LineItem exists ,update,else not found

			else if (lineItemRepo.existsById(lineItem.getId())) {
				lineItemRepo.save(lineItem);
			} else {

				throw new ResponseStatusException(HttpStatus.BAD_REQUEST, "LineItem id mismatch vs URL");

			}
		}
		
		
		// delete 	
		@DeleteMapping("/{id}")
		@ResponseStatus(HttpStatus.NO_CONTENT)
		public void deleteLineItem(@PathVariable int id) {
			if (lineItemRepo.existsById(id)) {
				lineItemRepo.deleteById(id);
			} else {
				throw new ResponseStatusException(HttpStatus.NOT_FOUND, "LineItem not found for id: " + id);
			}

		}
}
